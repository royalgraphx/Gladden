/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessagesExtension/MessagesExtension-Structs.h>
#import <MessagesExtension/GameScene.h>

@class NSString, SKSpriteNode, YouNode, SKNode, TipNode, SKLabelNode, NSMutableArray, PokerChat, PokerCard, PokerStack, ActionButton, NSMutableString, NSMutableDictionary;

@interface PokerScene : GameScene {

	NSString* player_id1;
	NSString* player_id2;
	SKSpriteNode* bg_node;
	SKSpriteNode* dealer_node;
	CGPoint touch;
	YouNode* you;
	SKNode* selected;
	int player;
	int player2;
	BOOL mine;
	int state;
	TipNode* tip;
	SKNode* board;
	int bank1;
	int bank2;
	int pot;
	SKLabelNode* pot_label;
	SKLabelNode* score1;
	SKLabelNode* score2;
	SKLabelNode* bid1_label;
	SKLabelNode* bid2_label;
	int bid1;
	int bid2;
	NSMutableArray* river;
	PokerChat* chat;
	PokerCard* card1;
	PokerCard* card2;
	PokerCard* enemy_card1;
	PokerCard* enemy_card2;
	PokerStack* stack1;
	PokerStack* stack2;
	PokerStack* bid1_stack;
	PokerStack* bid2_stack;
	PokerStack* pot_stack;
	ActionButton* fold_button;
	ActionButton* call_button;
	ActionButton* raise_button;
	ActionButton* change_button;
	float pressure;
	SKSpriteNode* pot_mid;
	SKSpriteNode* pot_right;
	SKSpriteNode* pot_left;
	int bid;
	int raise;
	int call;
	NSMutableArray* cards;
	NSMutableString* replay_send;
	NSMutableArray* replay;
	int win_state;
	int queue;
	int dealer;
	SKLabelNode* what1;
	SKLabelNode* what2;
	NSMutableDictionary* send_move;
	BOOL folded;

}
-(id)initWithMain:(id)arg1 msg:(id)arg2 ;
-(void)createSceneContents;
-(void)receiveMessage:(id)arg1 ;
-(void)playReplay;
-(CGPoint)Slerp:(CGPoint)arg1 pos2:(CGPoint)arg2 ratio:(float)arg3 ;
-(id)generatePreview;
-(void)savePlaceBack:(id)arg1 what:(id)arg2 ;
-(void)placeBack:(id)arg1 ;
-(void)touchDownAtPoint:(CGPoint)arg1 ;
-(void)touchMovedToPoint:(CGPoint)arg1 ;
-(void)touchUpAtPoint:(CGPoint)arg1 ;
-(id)parseReplay:(id)arg1 ;
-(void)setBoard:(id)arg1 ;
-(id)getPreview;
-(void)showWin;
-(void)playNextReplay;
-(void)ActionCall;
-(void)ActionFold;
-(void)ActionRaise;
-(void)setRaise:(int)arg1 ;
-(void)SetBid:(int)arg1 player:(int)arg2 ;
-(void)ActionBet;
-(void)AddRiverCard:(int)arg1 ;
-(void)ActionCheck;
-(void)PotAll;
-(void)ShowCards;
-(void)WinHalf;
-(void)WinAll:(int)arg1 ;
-(void)AddBlinds:(int)arg1 ;
-(void)addCards:(int)arg1 c2:(int)arg2 c3:(int)arg3 c4:(int)arg4 ;
-(void)AddCard:(int)arg1 player:(int)arg2 which:(int)arg3 instant:(BOOL)arg4 ;
-(void)ShowCombos;
-(void)Bid:(int)arg1 player:(int)arg2 ;
-(void)SetBank:(int)arg1 player:(int)arg2 stack:(id)arg3 ;
-(void)SetBid:(int)arg1 player:(int)arg2 stack:(id)arg3 ;
-(void)SetPot:(int)arg1 stack:(id)arg2 ;
-(void)AddRiverCard:(int)arg1 instant:(BOOL)arg2 ;
-(void)AddCard:(int)arg1 player:(int)arg2 which:(int)arg3 ;
-(void)ShowWinner;
-(id)saveBoard;
-(int)GetRandomCard:(id)arg1 ;
-(int)GetCard:(int)arg1 ;
-(id)BestCombo:(int)arg1 ;
-(void)hideChat;
-(int)GetRandomCard;
-(void)Check;
-(void)Fold;
-(void)Action;
-(void)AfterAction;
-(void)Call;
-(void)Raise;
-(void)NewGameStarted;
-(void)NewGameAction;
-(void)ActionPotAll;
-(void)ActionWin;
-(void)AddRiverAction;
-(void)Pot:(int)arg1 ;
-(void)bidOrient;
-(void)SetBank:(int)arg1 player:(int)arg2 ;
-(void)SetPot:(int)arg1 ;
-(void)Win:(id)arg1 player:(int)arg2 ;
-(void)Plus;
-(void)Minus;
-(void)resetCardPosition:(id)arg1 ;
-(void)Bid2;
-(void)Bid;
-(void)WinAll1;
-(void)setCall:(int)arg1 ;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)didMoveToView:(id)arg1 ;
-(void)update:(double)arg1 ;
-(void)sendMessage;
-(void)didChangeSize:(CGSize)arg1 ;
-(void)resize;
@end

