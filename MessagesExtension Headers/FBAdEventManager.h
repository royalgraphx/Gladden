/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessagesExtension/MessagesExtension-Structs.h>
#import <MessagesExtension/FBAdEventLogger.h>

@protocol OS_dispatch_queue;
@class FBAdDatabaseManager, FBAdTimer, NSObject, FBAdConcurrentArray, FBAdURLSession, FBAdConfigManager, NSString, NSUUID;

@interface FBAdEventManager : NSObject <FBAdEventLogger> {

	FBAdDatabaseManager* _databaseManager;
	FBAdTimer* _dispatchTimer;
	NSObject*<OS_dispatch_queue> _dispatchTimerQueue;
	FBAdConcurrentArray* _eventsInTransit;
	unsigned long long _sendAttempts;
	FBAdURLSession* _urlSession;
	FBAdConfigManager* _configManager;
	/*^block*/id _sessionInfoProvider;

}

@property (retain) FBAdDatabaseManager * databaseManager;                                  //@synthesize databaseManager=_databaseManager - In the implementation block
@property (nonatomic,retain) FBAdTimer * dispatchTimer;                                    //@synthesize dispatchTimer=_dispatchTimer - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> dispatchTimerQueue;              //@synthesize dispatchTimerQueue=_dispatchTimerQueue - In the implementation block
@property (nonatomic,retain) FBAdConcurrentArray * eventsInTransit;                        //@synthesize eventsInTransit=_eventsInTransit - In the implementation block
@property (assign,nonatomic) unsigned long long sendAttempts;                              //@synthesize sendAttempts=_sendAttempts - In the implementation block
@property (nonatomic,retain) FBAdURLSession * urlSession;                                  //@synthesize urlSession=_urlSession - In the implementation block
@property (nonatomic,retain) FBAdConfigManager * configManager;                            //@synthesize configManager=_configManager - In the implementation block
@property (nonatomic,copy) id sessionInfoProvider;                                         //@synthesize sessionInfoProvider=_sessionInfoProvider - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) NSUUID * sessionId; 
@property (nonatomic,readonly) double sessionTime; 
+(const char*)eventTableString;
+(const char*)tokenTableString;
-(id)funnelLogger;
-(BOOL)shouldCollectLocalCountersSignal;
-(void)logEventOfType:(id)arg1 withPriority:(unsigned long long)arg2 withToken:(id)arg3 withExtraData:(id)arg4 ;
-(void)logImpressionForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logImpressionMissForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logSnapshotForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logVideoEventForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logCloseEventForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logBrowserSessionEventForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logAdCompleteEventForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logDeviceRotateEventForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logOffTargetClickEventForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logUserReturnEventForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logDebugEventWithSubtype:(id)arg1 code:(long long)arg2 extraData:(id)arg3 ;
-(void)logAdReportingEventForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logShowAdCalledEventForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logUXFunnelEventForToken:(id)arg1 extraData:(id)arg2 ;
-(void)logDSLEventForToken:(id)arg1 extraData:(id)arg2 ;
-(void)logClickGuardEventForToken:(id)arg1 withExtraData:(id)arg2 ;
-(void)logPlayableMetricsForToken:(id)arg1 extraData:(id)arg2 ;
-(double)sessionTime;
-(id)initWithDatabaseManager:(id)arg1 sessionIdProvider:(/*^block*/id)arg2 ;
-(void)resetDispatchTimerWithTimeInterval:(double)arg1 ;
-(void)migrateDatabaseV1ToV2:(sqlite3Ref)arg1 ;
-(void)setupDatabaseWithCallback:(/*^block*/id)arg1 ;
-(void)tokenIdForToken:(id)arg1 withCallback:(/*^block*/id)arg2 ;
-(void)logEvent:(id)arg1 withCallback:(/*^block*/id)arg2 ;
-(void)logEventOfType:(id)arg1 withPriority:(unsigned long long)arg2 withToken:(id)arg3 withExtraData:(id)arg4 withCallback:(/*^block*/id)arg5 ;
-(BOOL)shouldDispatchNow:(id)arg1 ;
-(void)retryDispatch;
-(void)dispatchEvents;
-(void)dispatchEventsImmediately;
-(BOOL)shouldPurgeOn413Response;
-(void)sendRequestInternal:(id)arg1 withExtraData:(id)arg2 onRetry:(/*^block*/id)arg3 ;
-(BOOL)isEventSuccessful:(id)arg1 ;
-(BOOL)isEventRetriable:(id)arg1 ;
-(void)cleanupEventsSync:(id)arg1 withDatabase:(sqlite3Ref)arg2 ;
-(void)insertEvent:(id)arg1 withDatabase:(sqlite3Ref)arg2 withCallback:(/*^block*/id)arg3 ;
-(void)updateAttemptCountForEvent:(id)arg1 withDatabase:(sqlite3Ref)arg2 withCallback:(/*^block*/id)arg3 ;
-(void)removeAllOrphanedTokensSyncWithDatabase:(sqlite3Ref)arg1 withCallback:(/*^block*/id)arg2 ;
-(void)removeAllOrphanedEventsSyncWithDatabase:(sqlite3Ref)arg1 withCallback:(/*^block*/id)arg2 ;
-(void)queryEventsSyncWithStatement:(const char*)arg1 withDatabase:(sqlite3Ref)arg2 withCallback:(/*^block*/id)arg3 ;
-(void)queryTokensSyncWithStatement:(const char*)arg1 withDatabase:(sqlite3Ref)arg2 withCallback:(/*^block*/id)arg3 ;
-(NSObject*<OS_dispatch_queue>)dispatchTimerQueue;
-(void)setDispatchTimerQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(FBAdConcurrentArray *)eventsInTransit;
-(void)setEventsInTransit:(FBAdConcurrentArray *)arg1 ;
-(unsigned long long)sendAttempts;
-(void)setSendAttempts:(unsigned long long)arg1 ;
-(void)setConfigManager:(FBAdConfigManager *)arg1 ;
-(id)init;
-(void)dealloc;
-(id)context;
-(NSUUID *)sessionId;
-(FBAdURLSession *)urlSession;
-(void)setDispatchTimer:(FBAdTimer *)arg1 ;
-(FBAdTimer *)dispatchTimer;
-(void)setUrlSession:(FBAdURLSession *)arg1 ;
-(FBAdDatabaseManager *)databaseManager;
-(void)setDatabaseManager:(FBAdDatabaseManager *)arg1 ;
-(FBAdConfigManager *)configManager;
-(id)sessionStartTime;
-(id)sessionInfoProvider;
-(void)setSessionInfoProvider:(id)arg1 ;
-(id)initWithDatabaseManager:(id)arg1 ;
@end

