/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:20 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessagesExtension/MessagesExtension-Structs.h>
#import <MessagesExtension/FNFPlayerAudioEngine.h>
#import <MessagesExtension/FNFCoreAudioDelegate.h>

@protocol OS_dispatch_queue, FNFVideoPlaybackLoggingContext;
@class FNFCoreAudioWrapper, NSObject, NSString;

@interface FNFAudioQueue : NSObject <FNFPlayerAudioEngine, FNFCoreAudioDelegate> {

	FNFCoreAudioWrapper* _coreAudioWrapper;
	/*^block*/id _putDataCallback;
	/*^block*/id _enqueueCallback;
	/*^block*/id _outputCallback;
	/*^block*/id _errorCallback;
	/*^block*/id _logWarningCallback;
	AudioStreamBasicDescription _asbd;
	unsigned _sampleFrameSize;
	unsigned _minSampleFrameSize;
	AQBufferParameters _bufferParams;
	unsigned long long _state;
	BOOL _hasNoMoreFramesToEnqueue;
	AQBufferState* _audioQueueBuffer[3];
	int _activeBufferIndex;
	unsigned long long _framesEnqueued;
	unsigned long long _buffersReturned;
	unsigned long long _enqueueDataCalls;
	NSObject*<OS_dispatch_queue> _internalQueue;
	float _pendingVolume;
	float _pendingVolumeRampTime;
	float _pendingPlayRate;
	BOOL _deferAudioLevelSetup;
	BOOL _playbackAVSyncPreloadBuffers;
	BOOL _playbackAVSyncAudioQueuePrime;
	BOOL _playbackAVSyncEnqueueBeforeStart;
	BOOL _playbackAVSyncResumeEnqueuing;
	BOOL _playbackAVSyncTrackQueueRunningState;
	BOOL _enableAVSyncLogging;
	BOOL _enableAVSyncMetrics;
	BOOL _audioPreparedToPlay;
	BOOL _logInvalidationWarnings;
	BOOL _logGeneralWarnings;
	BOOL _logCommonWarnings;
	BOOL _isRunning;
	id<FNFVideoPlaybackLoggingContext> _loggingContext;
	/*^block*/id _audioLevelCallback;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(AQBufferParameters)_calculateBufferSizeAndPacketCountWithAsbd:(AudioStreamBasicDescription)arg1 frameSize:(unsigned)arg2 ;
-(void)setLoggingContext:(id)arg1 ;
-(void)audioQueueDidOutputForBuffer:(AudioQueueBuffer*)arg1 ;
-(void)audioQueueDidError:(id)arg1 withStatus:(int)arg2 ;
-(void)audioQueueDidChangeRunning:(BOOL)arg1 ;
-(void)setAudioStreamBasicDescription:(AudioStreamBasicDescription)arg1 extraParameters:(id)arg2 putDataCallback:(/*^block*/id)arg3 enqueueCallback:(/*^block*/id)arg4 outputCallback:(/*^block*/id)arg5 bufferUnderrunCallback:(/*^block*/id)arg6 errorCallback:(/*^block*/id)arg7 logWarningCallback:(/*^block*/id)arg8 sampleFrameSize:(unsigned)arg9 minSampleFrameSize:(unsigned)arg10 ;
-(BOOL)isReadyToPlayWithStartTime:(SCD_Struct_IM9)arg1 ;
-(void)playWithStartTime:(SCD_Struct_IM9)arg1 ;
-(void)stopLoadingData;
-(void)resumeEnqueuingData;
-(void)setVolume:(float)arg1 rampTime:(float)arg2 ;
-(void)enableLevelMeteringWithCallback:(/*^block*/id)arg1 ;
-(void)sendCurrentAudioLevelToCallback;
-(void)removeLevelMetering;
-(id)initWithPlayerConfig:(SCD_Struct_FN46)arg1 ;
-(void)_setQueueState:(unsigned long long)arg1 ;
-(BOOL)_isReadyForPlayback;
-(BOOL)_createAudioQueue;
-(void)_stopAudio;
-(void)_removeAudioQueue;
-(void)_readDataIntoBuffer;
-(BOOL)_isAudioErrorFatal:(long long)arg1 ;
-(BOOL)_isAudioFailure:(long long)arg1 ;
-(void)_logAudioError:(id)arg1 withStatus:(int)arg2 ;
-(id)init;
-(void)dealloc;
-(NSString *)description;
-(void)invalidate;
-(void)pause;
-(void)stop;
-(void)reset;
-(void)flush;
-(void)setRate:(float)arg1 ;
-(id)_stateDescription;
-(void)prepareToPlay;
-(BOOL)_startQueue;
-(SCD_Struct_IM9)getCurrentTime;
-(unsigned long long)_queueState;
@end

