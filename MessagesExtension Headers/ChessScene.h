/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessagesExtension/MessagesExtension-Structs.h>
#import <MessagesExtension/GameScene.h>

@class SKSpriteNode, ChessPiece, SKNode, NSString, NSDate, NSMutableString, NSMutableArray, SKLabelNode, ActionButton, TipNode, DotsLine, ChessTip2;

@interface ChessScene : GameScene {

	SKSpriteNode* bo3;
	SKSpriteNode* promo_bg;
	ChessPiece* promo_piece1;
	ChessPiece* promo_piece2;
	SKNode* board;
	SKNode* table;
	BOOL force;
	ChessPiece* force_piece;
	SKNode* selected;
	SKNode* selected2;
	CGPoint last_pos;
	CGPoint puck_pos;
	float speed;
	float board_size;
	float board_size_h;
	int state;
	int player;
	NSString* player_id1;
	NSString* player_id2;
	int score1;
	int score2;
	BOOL selected_moved;
	BOOL shot;
	SKNode* board2;
	NSDate* last_swoosh;
	NSMutableString* replay_send;
	NSMutableString* pre_send;
	NSMutableArray* replay;
	SKLabelNode* score1_label;
	SKLabelNode* score2_label;
	SKSpriteNode* score1_box;
	SKSpriteNode* score2_box;
	NSMutableArray* map;
	NSMutableArray* lines;
	NSMutableArray* squares;
	ActionButton* actionButton;
	TipNode* tip;
	SKSpriteNode* marker1;
	SKSpriteNode* marker2;
	DotsLine* line;
	float size;
	BOOL sent;
	float left;
	float right;
	int winner;
	int player2;
	SKSpriteNode* piece1;
	SKSpriteNode* piece2;
	float radius;
	SKSpriteNode* shade;
	SKSpriteNode* board3;
	NSMutableArray* win_stones;
	ChessTip2* me_tip;
	ChessTip2* opponent_tip;
	ChessTip2* check_tip;
	ChessTip2* me_tip2;
	ChessTip2* opponent_tip2;
	NSString* mode;
	BOOL done;
	CGPoint origin2;
	NSMutableArray* reset_board;
	BOOL game_check;
	BOOL mine;

}
-(id)initWithMain:(id)arg1 msg:(id)arg2 ;
-(void)createSceneContents;
-(void)receiveMessage:(id)arg1 ;
-(id)exportBoard:(BOOL)arg1 ;
-(void)testWin;
-(void)playReplay;
-(CGPoint)Slerp:(CGPoint)arg1 pos2:(CGPoint)arg2 ratio:(float)arg3 ;
-(id)generatePreview;
-(void)savePlaceBack:(id)arg1 what:(id)arg2 ;
-(void)placeBack:(id)arg1 ;
-(void)touchDownAtPoint:(CGPoint)arg1 ;
-(void)touchMovedToPoint:(CGPoint)arg1 ;
-(void)touchUpAtPoint:(CGPoint)arg1 ;
-(id)parseReplay:(id)arg1 ;
-(void)setBoard:(id)arg1 ;
-(void)new_round;
-(id)getPreview;
-(id)exportBoard;
-(void)swoosh;
-(void)showScore;
-(void)playMarker;
-(void)shoot;
-(void)swoosh2;
-(void)playReplay2:(int)arg1 ;
-(void)playReplay2;
-(BOOL)lineExists:(id)arg1 ;
-(void)removeTips;
-(BOOL)showMove:(id)arg1 add:(BOOL)arg2 ;
-(BOOL)inCheckMate:(int)arg1 ;
-(BOOL)inStale:(int)arg1 ;
-(void)Kill:(id)arg1 ;
-(void)resetBoard;
-(BOOL)showMove:(id)arg1 add:(BOOL)arg2 pl:(int)arg3 ;
-(BOOL)inCheck:(int)arg1 ;
-(id)clone:(id)arg1 ;
-(BOOL)checkAttack;
-(BOOL)inCheckMate2:(int)arg1 ;
-(BOOL)checkAttack:(id)arg1 add:(BOOL)arg2 ;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)didMoveToView:(id)arg1 ;
-(void)update:(double)arg1 ;
-(void)sendMessage;
-(void)didChangeSize:(CGSize)arg1 ;
-(void)skip;
-(void)resize;
@end

