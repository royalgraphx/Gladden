/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSURLSessionTaskDelegate.h>

@class NSArray, NSEnumerator, NSOperationQueue, NSString;

@interface ASCommManager : NSObject <NSURLSessionTaskDelegate> {

	NSArray* _eventSessionArr;
	NSEnumerator* _eventSessionEnumerator;
	NSOperationQueue* _eventQ;
	NSArray* _getSessionArr;
	NSEnumerator* _getSessionEnumerator;
	NSArray* _postSessionArr;
	NSEnumerator* _postSessionEnumerator;
	NSOperationQueue* _dataQ;

}

@property (nonatomic,retain) NSArray * eventSessionArr;                          //@synthesize eventSessionArr=_eventSessionArr - In the implementation block
@property (nonatomic,retain) NSEnumerator * eventSessionEnumerator;              //@synthesize eventSessionEnumerator=_eventSessionEnumerator - In the implementation block
@property (nonatomic,retain) NSOperationQueue * eventQ;                          //@synthesize eventQ=_eventQ - In the implementation block
@property (nonatomic,retain) NSArray * getSessionArr;                            //@synthesize getSessionArr=_getSessionArr - In the implementation block
@property (nonatomic,retain) NSEnumerator * getSessionEnumerator;                //@synthesize getSessionEnumerator=_getSessionEnumerator - In the implementation block
@property (nonatomic,retain) NSArray * postSessionArr;                           //@synthesize postSessionArr=_postSessionArr - In the implementation block
@property (nonatomic,retain) NSEnumerator * postSessionEnumerator;               //@synthesize postSessionEnumerator=_postSessionEnumerator - In the implementation block
@property (nonatomic,retain) NSOperationQueue * dataQ;                           //@synthesize dataQ=_dataQ - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)invalidateSessionsinArr:(id)arg1 ;
+(id)httpHeadersWithLength:(unsigned long long)arg1 withContentType:(id)arg2 ;
+(void)sendSessionTaskWithGetRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
+(void)sendSessionTaskWithEventRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
+(void)sendSessionTaskWithPostRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
+(void)sendAsynchronousRequestForEventURL:(id)arg1 ;
+(void)sendEventRequestToEndPoint:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
+(id)createSessionArrWithCount:(long long)arg1 forEvent:(BOOL)arg2 ;
+(void)startSessionDataTaskWithSession:(id)arg1 forRequest:(id)arg2 withCompletionBlock:(/*^block*/id)arg3 ;
+(id)urlStrFromReq:(id)arg1 ;
+(void)sendGetRequestToEndPoint:(id)arg1 forTime:(double)arg2 withCompletionBlock:(/*^block*/id)arg3 ;
+(void)sendPostRequestToEndPoint:(id)arg1 withJSONData:(id)arg2 forTime:(double)arg3 withCompletionBlock:(/*^block*/id)arg4 ;
+(void)sendAsynchronousRequestsForEvent:(id)arg1 ;
+(id)manager;
-(void)setEventQ:(NSOperationQueue *)arg1 ;
-(void)setDataQ:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)eventQ;
-(NSOperationQueue *)dataQ;
-(NSArray *)eventSessionArr;
-(void)setEventSessionArr:(NSArray *)arg1 ;
-(void)setEventSessionEnumerator:(NSEnumerator *)arg1 ;
-(NSEnumerator *)eventSessionEnumerator;
-(NSArray *)getSessionArr;
-(void)setGetSessionArr:(NSArray *)arg1 ;
-(void)setGetSessionEnumerator:(NSEnumerator *)arg1 ;
-(NSEnumerator *)getSessionEnumerator;
-(NSArray *)postSessionArr;
-(void)setPostSessionArr:(NSArray *)arg1 ;
-(void)setPostSessionEnumerator:(NSEnumerator *)arg1 ;
-(NSEnumerator *)postSessionEnumerator;
-(void)dealloc;
-(void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2 ;
-(void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
@end

