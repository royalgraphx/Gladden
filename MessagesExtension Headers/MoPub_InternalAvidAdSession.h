/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessagesExtension/MoPub_AvidEventDispatcherDelegate.h>
#import <MessagesExtension/MoPub_AvidBridgeDelegate.h>

@protocol MoPub_InternalAvidAdSessionDelegate;
@class MoPub_InternalAvidAdSessionContext, UIView, MoPub_AvidEventDispatcher, MoPub_AvidObstructionsWhiteList, MoPub_AvidBridge, MoPub_AvidDeferredAdSessionListenerImpl, NSString, MoPub_ExternalAvidAdSessionContext;

@interface MoPub_InternalAvidAdSession : NSObject <MoPub_AvidEventDispatcherDelegate, MoPub_AvidBridgeDelegate> {

	MoPub_InternalAvidAdSessionContext* _internalContext;
	BOOL _isActive;
	BOOL _onEndCalled;
	BOOL _isReady;
	UIView* _view;
	id<MoPub_InternalAvidAdSessionDelegate> _delegate;
	MoPub_AvidEventDispatcher* _eventDispatcher;
	MoPub_AvidObstructionsWhiteList* _obstructionsWhiteList;
	MoPub_AvidBridge* _avidBridge;
	double _lastUpdate;
	unsigned long long _adState;
	MoPub_AvidDeferredAdSessionListenerImpl* __avidDeferredAdSessionListener;

}

@property (nonatomic,retain) MoPub_AvidDeferredAdSessionListenerImpl * _avidDeferredAdSessionListener;              //@synthesize _avidDeferredAdSessionListener=__avidDeferredAdSessionListener - In the implementation block
@property (assign,nonatomic) BOOL onEndCalled;                                                                      //@synthesize onEndCalled=_onEndCalled - In the implementation block
@property (assign,nonatomic) BOOL isActive;                                                                         //@synthesize isActive=_isActive - In the implementation block
@property (assign,nonatomic) BOOL isReady;                                                                          //@synthesize isReady=_isReady - In the implementation block
@property (nonatomic,readonly) NSString * avidAdSessionId; 
@property (nonatomic,__weak,readonly) UIView * view;                                                                //@synthesize view=_view - In the implementation block
@property (nonatomic,readonly) BOOL isEmpty; 
@property (nonatomic,readonly) MoPub_ExternalAvidAdSessionContext * avidAdSessionContext; 
@property (nonatomic,readonly) id<MoPub_AvidDeferredAdSessionListener> avidDeferredAdSessionListener; 
@property (assign,nonatomic,__weak) id<MoPub_InternalAvidAdSessionDelegate> delegate;                               //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) MoPub_AvidEventDispatcher * eventDispatcher;                                           //@synthesize eventDispatcher=_eventDispatcher - In the implementation block
@property (nonatomic,readonly) MoPub_AvidObstructionsWhiteList * obstructionsWhiteList;                             //@synthesize obstructionsWhiteList=_obstructionsWhiteList - In the implementation block
@property (nonatomic,readonly) MoPub_AvidBridge * avidBridge;                                                       //@synthesize avidBridge=_avidBridge - In the implementation block
@property (nonatomic,readonly) double lastUpdate;                                                                   //@synthesize lastUpdate=_lastUpdate - In the implementation block
@property (nonatomic,readonly) unsigned long long adState;                                                          //@synthesize adState=_adState - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)avidAdSessionWithId:(id)arg1 context:(id)arg2 ;
+(id)mediaType;
+(id)sessionType;
-(void)registerAdView:(id)arg1 ;
-(unsigned long long)adState;
-(id<MoPub_AvidDeferredAdSessionListener>)avidDeferredAdSessionListener;
-(id)makeDeferredAdSessionListener;
-(void)set_avidDeferredAdSessionListener:(MoPub_AvidDeferredAdSessionListenerImpl *)arg1 ;
-(void)onViewChanged;
-(MoPub_ExternalAvidAdSessionContext *)avidAdSessionContext;
-(void)checkAccessToDeferredAdSessionListener;
-(MoPub_AvidDeferredAdSessionListenerImpl *)_avidDeferredAdSessionListener;
-(void)throwDeferredAdSessionListenerAccessedOnNonDeferredSession;
-(void)updateIsActiveIfNeeded;
-(void)cleanupViewState;
-(void)setOnEndCalled:(BOOL)arg1 ;
-(void)publishReadyEvent;
-(void)assertSessionIsNotClosed;
-(BOOL)onEndCalled;
-(BOOL)eventDispatcherShouldBufferEvent:(id)arg1 ;
-(void)avidBridgeDidInjectAvid;
-(void)onViewRegistered;
-(void)onViewUnregistered;
-(void)unregisterAdView:(id)arg1 ;
-(MoPub_AvidObstructionsWhiteList *)obstructionsWhiteList;
-(NSString *)avidAdSessionId;
-(MoPub_AvidBridge *)avidBridge;
-(BOOL)doesManageView:(id)arg1 ;
-(id)initWithId:(id)arg1 context:(id)arg2 ;
-(void)eventDispatcher:(id)arg1 didPushEvent:(id)arg2 ;
-(void)publishNativeViewStateWithCommand:(id)arg1 timestamp:(double)arg2 ;
-(void)publishEmptyNativeViewStateWithCommand:(id)arg1 timestamp:(double)arg2 ;
-(BOOL)isEmpty;
-(id<MoPub_InternalAvidAdSessionDelegate>)delegate;
-(void)setDelegate:(id<MoPub_InternalAvidAdSessionDelegate>)arg1 ;
-(BOOL)isActive;
-(BOOL)isReady;
-(double)lastUpdate;
-(UIView *)view;
-(void)setIsActive:(BOOL)arg1 ;
-(void)setIsReady:(BOOL)arg1 ;
-(void)onStart;
-(void)onEnd;
-(void)setAppState:(long long)arg1 ;
-(MoPub_AvidEventDispatcher *)eventDispatcher;
-(void)setEventDispatcher:(MoPub_AvidEventDispatcher *)arg1 ;
@end

