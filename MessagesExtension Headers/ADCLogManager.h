/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, ADCCrashManager, NSMutableDictionary, NSMutableArray, NSTimer;

@interface ADCLogManager : NSObject {

	BOOL _active;
	NSString* _version;
	NSString* _environment;
	ADCCrashManager* _crashManager;
	NSMutableDictionary* _kibanaWaitingQueue;
	NSMutableDictionary* _moduleConfigs;
	NSMutableArray* _queuedLogs;
	NSTimer* _logIntervalTimer;
	double _logInterval;
	NSTimer* _cacheInfoTimer;

}

@property (assign,nonatomic) BOOL active;                                           //@synthesize active=_active - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * kibanaWaitingQueue;              //@synthesize kibanaWaitingQueue=_kibanaWaitingQueue - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * moduleConfigs;                   //@synthesize moduleConfigs=_moduleConfigs - In the implementation block
@property (nonatomic,retain) NSMutableArray * queuedLogs;                           //@synthesize queuedLogs=_queuedLogs - In the implementation block
@property (nonatomic,retain) NSTimer * logIntervalTimer;                            //@synthesize logIntervalTimer=_logIntervalTimer - In the implementation block
@property (assign) double logInterval;                                              //@synthesize logInterval=_logInterval - In the implementation block
@property (nonatomic,retain) NSTimer * cacheInfoTimer;                              //@synthesize cacheInfoTimer=_cacheInfoTimer - In the implementation block
@property (assign,nonatomic) double sendInterval; 
@property (nonatomic,retain) NSString * version;                                    //@synthesize version=_version - In the implementation block
@property (nonatomic,retain) NSString * environment;                                //@synthesize environment=_environment - In the implementation block
@property (nonatomic,retain) ADCCrashManager * crashManager;                        //@synthesize crashManager=_crashManager - In the implementation block
+(void)fullLogWithModuleID:(long long)arg1 isPublic:(BOOL)arg2 level:(long long)arg3 function:(const char*)arg4 line:(int)arg5 withFormat:(id)arg6 ;
+(id)getFullMessageWithFormat:(id)arg1 withArgs:(char*)arg2 ;
+(void)processLogWithModuleID:(long long)arg1 isPublic:(BOOL)arg2 level:(long long)arg3 function:(const char*)arg4 line:(int)arg5 withMessage:(id)arg6 ;
+(const char*)getTagForLevel:(long long)arg1 ;
+(id)getFullMessage:(const char*)arg1 level:(long long)arg2 line:(int)arg3 message:(id)arg4 ;
+(void)processLogImplWithModuleID:(const char*)arg1 isPublic:(BOOL)arg2 level:(long long)arg3 line:(int)arg4 message:(id)arg5 moduleID:(long long)arg6 ;
+(void)briefLogWithModuleID:(long long)arg1 isPublic:(BOOL)arg2 level:(long long)arg3 withFormat:(id)arg4 ;
-(void)setKibanaWaitingQueue:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)kibanaWaitingQueue;
-(void)setModuleConfigs:(NSMutableDictionary *)arg1 ;
-(void)setQueuedLogs:(NSMutableArray *)arg1 ;
-(void)setLoggingConfigForModule:(unsigned long long)arg1 sendLevel:(long long)arg2 printLevel:(long long)arg3 privateLogging:(BOOL)arg4 ;
-(NSMutableDictionary *)moduleConfigs;
-(void)queueKibanaLog:(id)arg1 ;
-(NSTimer *)logIntervalTimer;
-(void)setLogIntervalTimer:(NSTimer *)arg1 ;
-(void)propogateLogs;
-(ADCCrashManager *)crashManager;
-(void)setLogsActive;
-(void)setCrashManager:(ADCCrashManager *)arg1 ;
-(NSTimer *)cacheInfoTimer;
-(void)setCacheInfoTimer:(NSTimer *)arg1 ;
-(id)init;
-(NSString *)version;
-(void)setVersion:(NSString *)arg1 ;
-(NSString *)environment;
-(void)setEnvironment:(NSString *)arg1 ;
-(void)setActive:(BOOL)arg1 ;
-(BOOL)active;
-(double)logInterval;
-(void)setLogInterval:(double)arg1 ;
-(double)sendInterval;
-(void)setSendInterval:(double)arg1 ;
-(NSMutableArray *)queuedLogs;
@end

