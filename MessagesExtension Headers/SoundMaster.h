/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/AVAudioPlayerDelegate.h>

@class NSMutableDictionary, NSString, NSTimer;

@interface SoundMaster : NSObject <AVAudioPlayerDelegate> {

	BOOL _isPlayingMusic;
	double _musicVolume;
	double _effectsVolume;
	double _musicFadeTime;
	/*^block*/id _musicCompletion;
	NSMutableDictionary* _effects;
	NSMutableDictionary* _effectsRelativeVolumes;
	NSMutableDictionary* _musics;
	NSString* _currentMusicPath;
	NSTimer* _musicTimer;
	NSTimer* _musicTimer2;

}

@property (nonatomic,retain) NSMutableDictionary * effects;                             //@synthesize effects=_effects - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * effectsRelativeVolumes;              //@synthesize effectsRelativeVolumes=_effectsRelativeVolumes - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * musics;                              //@synthesize musics=_musics - In the implementation block
@property (retain) NSString * currentMusicPath;                                         //@synthesize currentMusicPath=_currentMusicPath - In the implementation block
@property (retain) NSTimer * musicTimer;                                                //@synthesize musicTimer=_musicTimer - In the implementation block
@property (retain) NSTimer * musicTimer2;                                               //@synthesize musicTimer2=_musicTimer2 - In the implementation block
@property (assign,nonatomic) double musicVolume;                                        //@synthesize musicVolume=_musicVolume - In the implementation block
@property (assign,nonatomic) double effectsVolume;                                      //@synthesize effectsVolume=_effectsVolume - In the implementation block
@property (assign,nonatomic) double musicFadeTime;                                      //@synthesize musicFadeTime=_musicFadeTime - In the implementation block
@property (readonly) BOOL isPlayingMusic;                                               //@synthesize isPlayingMusic=_isPlayingMusic - In the implementation block
@property (copy) id musicCompletion;                                                    //@synthesize musicCompletion=_musicCompletion - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedMaster;
-(void)playMusic:(id)arg1 ;
-(void)setMusicVolume:(double)arg1 ;
-(void)setEffectsVolume:(double)arg1 ;
-(void)setMusicFadeTime:(double)arg1 ;
-(NSMutableDictionary *)effectsRelativeVolumes;
-(void)playEffect:(id)arg1 relativeVolume:(double)arg2 ;
-(id)playerWithFileName:(id)arg1 ;
-(double)effectsVolume;
-(NSMutableDictionary *)musics;
-(NSString *)currentMusicPath;
-(double)musicFadeTime;
-(NSTimer *)musicTimer;
-(void)makeMusicPlayer:(id)arg1 fadeIn:(BOOL)arg2 duration:(double)arg3 timer:(id)arg4 ;
-(void)setCurrentMusicPath:(NSString *)arg1 ;
-(void)playMusic:(id)arg1 loop:(BOOL)arg2 fadeIn:(BOOL)arg3 ;
-(void)playMusic:(id)arg1 loop:(BOOL)arg2 ;
-(void)pauseMusicWithFadeOut:(BOOL)arg1 ;
-(void)resumeMusicWithFadeIn:(BOOL)arg1 ;
-(void)performCrossFade:(id)arg1 ;
-(NSTimer *)musicTimer2;
-(void)crossFadeToMusic:(id)arg1 loop:(BOOL)arg2 fadeDuration:(double)arg3 waitUntilCurrentLoopEnds:(BOOL)arg4 ;
-(void)crossFadeToMusic:(id)arg1 loop:(BOOL)arg2 fadeDuration:(double)arg3 ;
-(void)timerSelector:(id)arg1 ;
-(void)setMusicTimer:(NSTimer *)arg1 ;
-(id)musicCompletion;
-(void)releaseUnnecessaryEffectCopies:(id)arg1 ;
-(void)preloadEffect:(id)arg1 ;
-(void)setRelativeVolume:(double)arg1 effect:(id)arg2 ;
-(void)preloadMusic:(id)arg1 ;
-(void)pauseMusic;
-(void)resumeMusic;
-(void)crossFadeToMusic:(id)arg1 loop:(BOOL)arg2 ;
-(BOOL)isPlayingMusic;
-(void)setMusicCompletion:(id)arg1 ;
-(void)setEffectsRelativeVolumes:(NSMutableDictionary *)arg1 ;
-(void)setMusics:(NSMutableDictionary *)arg1 ;
-(void)setMusicTimer2:(NSTimer *)arg1 ;
-(id)init;
-(void)clearCache;
-(void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(BOOL)arg2 ;
-(void)playEffect:(id)arg1 ;
-(double)musicVolume;
-(NSMutableDictionary *)effects;
-(void)setEffects:(NSMutableDictionary *)arg1 ;
@end

