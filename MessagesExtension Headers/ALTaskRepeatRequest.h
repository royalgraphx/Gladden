/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessagesExtension/ALTask.h>
#import <MessagesExtension/ALConnectionManagerDelegate.h>

@protocol ALConnectionManagerDelegate;
@class NSString, NSDictionary, ALConnectionStatsTracker;

@interface ALTaskRepeatRequest : ALTask <ALConnectionManagerDelegate> {

	BOOL _requiresResponse;
	unsigned long long attemptsLeft;
	NSString* requestEndpoint;
	NSString* requestMethod;
	NSDictionary* request;
	id<ALConnectionManagerDelegate> delegate;
	double timeoutSec;
	NSString* _requestBackupEndpoint;
	double _retryDelayMs;
	id _emptyResponse;
	unsigned long long _retryQueue;
	long long _endpointTypeToClear;
	long long _backupEndpointTypeToClear;
	ALConnectionStatsTracker* _statsTracker;

}

@property (assign) unsigned long long attemptsLeft; 
@property (nonatomic,retain) NSString * requestEndpoint; 
@property (nonatomic,retain) NSString * requestBackupEndpoint;                      //@synthesize requestBackupEndpoint=_requestBackupEndpoint - In the implementation block
@property (nonatomic,retain) NSString * requestMethod; 
@property (nonatomic,retain) NSDictionary * request; 
@property (nonatomic,retain) id<ALConnectionManagerDelegate> delegate; 
@property (assign,nonatomic) double timeoutSec; 
@property (assign,nonatomic) double retryDelayMs;                                   //@synthesize retryDelayMs=_retryDelayMs - In the implementation block
@property (nonatomic,retain) id emptyResponse;                                      //@synthesize emptyResponse=_emptyResponse - In the implementation block
@property (assign,nonatomic) BOOL requiresResponse;                                 //@synthesize requiresResponse=_requiresResponse - In the implementation block
@property (assign,nonatomic) unsigned long long retryQueue;                         //@synthesize retryQueue=_retryQueue - In the implementation block
@property (assign,nonatomic) long long endpointTypeToClear;                         //@synthesize endpointTypeToClear=_endpointTypeToClear - In the implementation block
@property (assign,nonatomic) long long backupEndpointTypeToClear;                   //@synthesize backupEndpointTypeToClear=_backupEndpointTypeToClear - In the implementation block
@property (nonatomic,retain) ALConnectionStatsTracker * statsTracker;               //@synthesize statsTracker=_statsTracker - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setRetryDelayMs:(double)arg1 ;
-(id)initWithSdk:(id)arg1 ;
-(void)setRequestBackupEndpoint:(NSString *)arg1 ;
-(void)setAttemptsLeft:(unsigned long long)arg1 ;
-(void)setTimeoutSec:(double)arg1 ;
-(void)setEndpointTypeToClear:(long long)arg1 ;
-(void)setBackupEndpointTypeToClear:(long long)arg1 ;
-(void)connectionVia:(id)arg1 didSucceedWith:(long long)arg2 responseBody:(id)arg3 ;
-(void)connectionVia:(id)arg1 didFailWith:(long long)arg2 ;
-(BOOL)connectionVia:(id)arg1 requiresResponseForRequest:(id)arg2 ;
-(void)setEmptyResponse:(id)arg1 ;
-(void)setRetryQueue:(unsigned long long)arg1 ;
-(double)retryDelayMs;
-(double)timeoutSec;
-(unsigned long long)attemptsLeft;
-(NSString *)requestBackupEndpoint;
-(unsigned long long)retryQueue;
-(long long)endpointTypeToClear;
-(void)clearSettingTypeIfNeeded:(long long)arg1 ;
-(long long)backupEndpointTypeToClear;
-(void)run;
-(id<ALConnectionManagerDelegate>)delegate;
-(void)setDelegate:(id<ALConnectionManagerDelegate>)arg1 ;
-(void)setRequest:(NSDictionary *)arg1 ;
-(NSDictionary *)request;
-(NSString *)requestEndpoint;
-(void)setRequestEndpoint:(NSString *)arg1 ;
-(NSString *)requestMethod;
-(void)setRequestMethod:(NSString *)arg1 ;
-(BOOL)requiresResponse;
-(void)setRequiresResponse:(BOOL)arg1 ;
-(id)emptyResponse;
-(void)setStatsTracker:(ALConnectionStatsTracker *)arg1 ;
-(ALConnectionStatsTracker *)statsTracker;
@end

