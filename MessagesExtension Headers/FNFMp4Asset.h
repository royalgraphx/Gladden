/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:20 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessagesExtension/MessagesExtension-Structs.h>
#import <libobjc.A.dylib/AVAsynchronousKeyValueLoading.h>
#import <MessagesExtension/FNFAVAsset.h>
#import <MessagesExtension/FNFAVPlayerItem.h>
#import <MessagesExtension/FNFAssetForPlayer.h>
#import <MessagesExtension/FNFInfoForLoopableAsset.h>
#import <MessagesExtension/FNFDataLoaderDelegate.h>
#import <MessagesExtension/FNFAtomManagerDelegate.h>
#import <MessagesExtension/FNFTimeLoadedDelegate.h>
#import <MessagesExtension/FNFAsset.h>

@protocol OS_dispatch_queue, FNFDataLoader, FNFAtomManager, FNFAssetEventListener;
@class NSObject, FNFBufferSizeDecider, NSError, NSString, NSArray, AVAudioMix;

@interface FNFMp4Asset : NSObject <AVAsynchronousKeyValueLoading, FNFAVAsset, FNFAVPlayerItem, FNFAssetForPlayer, FNFInfoForLoopableAsset, FNFDataLoaderDelegate, FNFAtomManagerDelegate, FNFTimeLoadedDelegate, FNFAsset> {

	/*^block*/id _assetLoadedHandler;
	/*^block*/id _assetCompletionHandler;
	NSObject*<OS_dispatch_queue> _assetCompletionCallbackQueue;
	id<FNFDataLoader> _dataLoader;
	id<FNFAtomManager> _atomManager;
	FNFBufferSizeDecider* _bufferSizeDecider;
	/*^block*/id _playerCheckForStallCallback;
	BOOL _hasFailed;
	BOOL _isStalled;
	NSError* _error;
	NSError* _loadingError;
	BOOL _shouldShowBroadcasterInterruptedMessage;
	BOOL _assetLoaded;
	BOOL _waitingOnLoad;
	int _warningCount;
	NSObject*<OS_dispatch_queue> _dispatchQueue;
	BOOL _isAsync;
	int _pauseReason;
	unsigned long long _moovAtomSizeForReattempt;
	unsigned long long _moovAtomSizeForDataLoader;
	id<FNFAssetEventListener> _eventListener;
	BOOL _enableWhatsAppStreaming;
	BOOL _shouldApplyRotationTransform;
	NSString* _resourceHost;

}

@property (copy) NSString * resourceHost;                                      //@synthesize resourceHost=_resourceHost - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) long long status; 
@property (nonatomic,copy,readonly) NSArray * loadedTimeRanges; 
@property (nonatomic,readonly) BOOL shouldApplyRotationTransform; 
@property (nonatomic,copy) AVAudioMix * audioMix; 
@property (nonatomic,readonly) SCD_Struct_IM9 maxBufferTime; 
@property (nonatomic,readonly) SCD_Struct_IM9 minBufferTime; 
@property (nonatomic,readonly) int pauseReason; 
-(BOOL)seekToPosition:(SCD_Struct_IM9)arg1 ;
-(opaqueCMFormatDescriptionRef)formatDesc;
-(id)audioStreamExtraParameters;
-(id)audioChannelConfiguration;
-(BOOL)containsTrack:(long long)arg1 ;
-(unsigned long long)codecFormatForTrack:(long long)arg1 ;
-(void)addErrorToLog:(id)arg1 shouldStopPlayback:(BOOL)arg2 ;
-(id)representationId;
-(id)audioRepresentationId;
-(id)mpdAccessibilityDescription;
-(BOOL)mpdContainsAttributeUsingASRCaptions;
-(BOOL)trackHasMoreFrames:(long long)arg1 ;
-(FNFFrameMetadata)currentFrameMetadataForTrack:(long long)arg1 ;
-(const char*)currentFrameDataForTrack:(long long)arg1 ;
-(void)advanceFrameForTrack:(long long)arg1 ;
-(void)updatePlaybackTime:(SCD_Struct_IM9)arg1 ;
-(BOOL)shouldPauseForStallingWithNextCheckCallback:(/*^block*/id)arg1 stallReason:(int)arg2 ;
-(BOOL)shouldRestartAfterStalling;
-(BOOL)stallingForTrack:(long long)arg1 ;
-(BOOL)shouldBufferVideoAsSoonAsPossible;
-(BOOL)resetAssetToBeginningIfNeeded;
-(void)playbackPauseRequested:(int)arg1 ;
-(SCD_Struct_IM9)timeAfterSeek;
-(id)qualityLabel;
-(BOOL)decompressedFramebuffer;
-(BOOL)isDurationFinal;
-(double)prepareToSeekWithPosition:(SCD_Struct_IM9)arg1 ;
-(void)setAssetEventListener:(id)arg1 ;
-(void)setIsSoundMuted:(BOOL)arg1 ;
-(void)setUserSelectedQuality:(id)arg1 ;
-(void)asyncLoadAssetWithHandler:(/*^block*/id)arg1 onQueue:(id)arg2 ;
-(SCD_Struct_IM9)maxBufferTime;
-(SCD_Struct_IM9)minBufferTime;
-(void)asyncLoadAvailableQualitiesWithHandler:(/*^block*/id)arg1 onQueue:(id)arg2 ;
-(void)asyncLoadCurrentQualityWithHandler:(/*^block*/id)arg1 onQueue:(id)arg2 ;
-(void)requestTimeLoadedUpdate;
-(void)requestErrorNotificationIfNeeded;
-(BOOL)shouldApplyRotationTransform;
-(SCD_Struct_IM9)videoTrackDuration;
-(BOOL)shouldPrepareToLoop;
-(id)_assetError;
-(NSString *)resourceHost;
-(void)setResourceHost:(NSString *)arg1 ;
-(void)willChangeValue;
-(void)didChangeValue;
-(void)parsingDidFailWithError:(id)arg1 ;
-(void)resetDataForSeekBack;
-(void)resetDataForSeekBackForTrack:(long long)arg1 ;
-(void)loadingDidFailWithError:(id)arg1 ;
-(void)dataWasReceivedForTrack:(long long)arg1 andIsComplete:(BOOL)arg2 ;
-(id)initWithURL:(id)arg1 config:(SCD_Struct_FN73)arg2 ;
-(id)initWithURL:(id)arg1 moovAtomSize:(unsigned long long)arg2 moovAtomSizeForReattempt:(unsigned long long)arg3 bitrate:(unsigned long long)arg4 fetchBufferSizeInSeconds:(double)arg5 unstallBufferSizeInSeconds:(double)arg6 stallBufferSizeInSeconds:(double)arg7 firstFetchSizeInSeconds:(double)arg8 fetchBufferMultiplier:(double)arg9 unstallBufferMultiplier:(double)arg10 enableMp4AssetSeekingFix:(BOOL)arg11 enableMp4AssetEditListSeekingFix:(BOOL)arg12 enableMp4AssetRotationSupport:(BOOL)arg13 enableHEVCSupport:(BOOL)arg14 eventListener:(id)arg15 ;
-(id)initWithURL:(id)arg1 moovAtomSize:(unsigned long long)arg2 moovAtomSizeForReattempt:(unsigned long long)arg3 bitrate:(unsigned long long)arg4 fetchBufferSizeInSeconds:(double)arg5 unstallBufferSizeInSeconds:(double)arg6 stallBufferSizeInSeconds:(double)arg7 firstFetchSizeInSeconds:(double)arg8 fetchBufferMultiplier:(double)arg9 unstallBufferMultiplier:(double)arg10 enableMp4AssetSeekingFix:(BOOL)arg11 enableMp4AssetEditListSeekingFix:(BOOL)arg12 enableMp4AssetRotationSupport:(BOOL)arg13 enableHEVCSupport:(BOOL)arg14 ;
-(id)initWithURL:(id)arg1 moovAtomSize:(unsigned long long)arg2 bitrate:(unsigned long long)arg3 ;
-(id)initWithURL:(id)arg1 moovAtomSize:(unsigned long long)arg2 bitrate:(unsigned long long)arg3 dispatchQueue:(id)arg4 isAsync:(BOOL)arg5 ;
-(id)initWithURL:(id)arg1 config:(SCD_Struct_FN73)arg2 dispatchQueue:(id)arg3 isAsync:(BOOL)arg4 ;
-(void)_updateTimeLoaded;
-(BOOL)_fullyDownloaded:(long long)arg1 ;
-(BOOL)_fullyDownloaded;
-(void)_potentiallyStartRequest;
-(void)_potentiallyStartRequestForTrack:(long long)arg1 ;
-(void)_handleWarning:(id)arg1 ;
-(void)_seekDataLoaderToTime:(SCD_Struct_IM9)arg1 offset:(unsigned long long)arg2 shouldUpdateOffset:(BOOL)arg3 track:(long long)arg4 ;
-(void)_handleAssetLoaded;
-(id)dataBlockDistributorForTrack:(long long)arg1 ;
-(unsigned long long)currentOffsetForTrack:(long long)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(long long)status;
-(SCD_Struct_IM9)duration;
-(SCD_Struct_IM9)_duration;
-(id)asset;
-(NSArray *)loadedTimeRanges;
-(SCD_Struct_IM9)currentTime;
-(void)_handleError:(id)arg1 ;
-(id)projection;
-(id)tracksWithMediaType:(id)arg1 ;
-(CGSize)naturalSize;
-(CGAffineTransform)preferredTransform;
-(void)loadValuesAsynchronouslyForKeys:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setAudioMix:(AVAudioMix *)arg1 ;
-(void)addOutput:(id)arg1 ;
-(id)resourceLoader;
-(void)cancelLoading;
-(id)accessLog;
-(long long)statusOfValueForKey:(id)arg1 error:(id*)arg2 ;
-(AVAudioMix *)audioMix;
-(BOOL)isPlaybackLikelyToKeepUp;
-(BOOL)isPlaybackBufferFull;
-(unsigned long long)timescale;
-(BOOL)isAudioOnly;
-(void)playbackStarted;
-(id)audioCodec;
-(BOOL)isProtectedContent;
-(int)pauseReason;
-(long long)_assetStatus;
-(void)reportWarning:(id)arg1 ;
-(AudioStreamBasicDescription)asbd;
-(id)debugDetails;
@end

