/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@interface ALUtils : NSObject
+(BOOL)verboseLoggingOn;
+(BOOL)testAdsEnabled;
+(BOOL)verboseLoggingConfiguredByPublisher;
+(unsigned long long)currentOrientationMask;
+(BOOL)supportedOrientationsIntersectWithTargetOrientations:(unsigned long long)arg1 using:(id)arg2 ;
+(id)timeInSecondsFromMilliseconds:(id)arg1 ;
+(BOOL)shouldDisplayAd:(id)arg1 usingSDK:(id)arg2 ;
+(id)retrieveNonDummyAdIfNeededForAd:(id)arg1 usingSDK:(id)arg2 ;
+(id)zoneFromFullAdResponse:(id)arg1 withSDK:(id)arg2 ;
+(id)replacePlacementMacroInURL:(id)arg1 withPlacement:(id)arg2 ;
+(void)openURL:(id)arg1 usingSDK:(id)arg2 ;
+(id)topViewControllerFromKeyWindow;
+(void)handleFailedAdRenderForAdLoadDelegate:(id)arg1 adService:(id)arg2 zone:(id)arg3 withErrorCode:(long long)arg4 usingSDK:(id)arg5 ;
+(BOOL)assertValidAd:(id)arg1 ;
+(id)replacePlacementMacroInString:(id)arg1 withPlacement:(id)arg2 encode:(BOOL)arg3 ;
+(id)topViewControllerFromWindow:(id)arg1 ;
+(unsigned long long)intersectOfApplicationOrientationsAndProvidedOrientations:(unsigned long long)arg1 ;
+(id)sdkKey;
+(id)coerceString:(id)arg1 ;
+(id)constraintsForVisualFormatStrings:(id)arg1 variableBindings:(id)arg2 ;
+(id)replaceURLString:(id)arg1 withCLCode:(id)arg2 ;
+(unsigned long long)videoCompletionPercentFromAdObject:(id)arg1 ;
+(id)shortHashOf:(id)arg1 using:(id)arg2 ;
+(BOOL)isTimeFor:(long long)arg1 usingManager:(id)arg2 ;
+(id)hashOf:(id)arg1 using:(id)arg2 andTrimTo:(unsigned long long)arg3 ;
+(id)topViewControllerFromViewController:(id)arg1 ;
+(BOOL)isTimeFor:(long long)arg1 using:(id)arg2 ;
+(id)fullHashOf:(id)arg1 using:(id)arg2 ;
+(id)timeInMillisecondsFromSeconds:(id)arg1 ;
+(BOOL)string:(id)arg1 al_containsSubstring:(id)arg2 ;
+(BOOL)isDomain:(id)arg1 inWhitelist:(id)arg2 ;
+(id)queryDictFromURL:(id)arg1 ;
+(id)constraintsForVisualFormatString:(id)arg1 variableBindings:(id)arg2 ;
@end

