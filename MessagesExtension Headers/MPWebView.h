/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessagesExtension/MessagesExtension-Structs.h>
#import <UIKitCore/UIView.h>
#import <libobjc.A.dylib/WKNavigationDelegate.h>
#import <libobjc.A.dylib/WKUIDelegate.h>
#import <UIKit/UIScrollViewDelegate.h>

@protocol MPWebViewDelegate;
@class WKWebView, NSArray, UIView, UIScrollView, NSString;

@interface MPWebView : UIView <WKNavigationDelegate, WKUIDelegate, UIScrollViewDelegate> {

	BOOL _shouldConformToSafeArea;
	BOOL _hasMovedToWindow;
	id<MPWebViewDelegate> _delegate;
	WKWebView* _wkWebView;
	NSArray* _webViewLayoutConstraints;

}

@property (nonatomic,readonly) UIView * containedWebView; 
@property (assign,nonatomic,__weak) WKWebView * wkWebView;                            //@synthesize wkWebView=_wkWebView - In the implementation block
@property (nonatomic,retain) NSArray * webViewLayoutConstraints;                      //@synthesize webViewLayoutConstraints=_webViewLayoutConstraints - In the implementation block
@property (assign,nonatomic) BOOL hasMovedToWindow;                                   //@synthesize hasMovedToWindow=_hasMovedToWindow - In the implementation block
@property (assign,nonatomic,__weak) id<MPWebViewDelegate> delegate;                   //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL shouldConformToSafeArea;                            //@synthesize shouldConformToSafeArea=_shouldConformToSafeArea - In the implementation block
@property (getter=isLoading,nonatomic,readonly) BOOL loading; 
@property (assign,nonatomic) BOOL allowsLinkPreview; 
@property (nonatomic,readonly) BOOL allowsPictureInPictureMediaPlayback; 
@property (nonatomic,readonly) BOOL canGoBack; 
@property (nonatomic,readonly) BOOL canGoForward; 
@property (assign,nonatomic) BOOL scalesPageToFit; 
@property (nonatomic,readonly) UIScrollView * scrollView; 
@property (nonatomic,readonly) BOOL allowsInlineMediaPlayback; 
@property (nonatomic,readonly) BOOL mediaPlaybackRequiresUserAction; 
@property (nonatomic,readonly) BOOL mediaPlaybackAllowsAirPlay; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(WKWebView *)wkWebView;
-(void)setWkWebView:(WKWebView *)arg1 ;
-(void)setShouldConformToSafeArea:(BOOL)arg1 ;
-(void)mp_setScrollable:(BOOL)arg1 ;
-(void)retainWKWebViewOffscreen:(id)arg1 ;
-(id)constructOffscreenView;
-(BOOL)shouldConformToSafeArea;
-(void)constrainView:(id)arg1 shouldUseSafeArea:(BOOL)arg2 ;
-(void)cleanUpOffscreenView;
-(NSArray *)webViewLayoutConstraints;
-(void)setWebViewLayoutConstraints:(NSArray *)arg1 ;
-(UIView *)containedWebView;
-(id)init;
-(void)dealloc;
-(id)initWithCoder:(id)arg1 ;
-(id<MPWebViewDelegate>)delegate;
-(void)setDelegate:(id<MPWebViewDelegate>)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)reload;
-(void)stopLoading;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)loadData:(id)arg1 MIMEType:(id)arg2 textEncodingName:(id)arg3 baseURL:(id)arg4 ;
-(id)viewForZoomingInScrollView:(id)arg1 ;
-(void)didMoveToWindow;
-(UIScrollView *)scrollView;
-(void)setAllowsLinkPreview:(BOOL)arg1 ;
-(void)loadHTMLString:(id)arg1 baseURL:(id)arg2 ;
-(BOOL)allowsInlineMediaPlayback;
-(BOOL)mediaPlaybackRequiresUserAction;
-(BOOL)allowsLinkPreview;
-(void)loadRequest:(id)arg1 ;
-(BOOL)mediaPlaybackAllowsAirPlay;
-(BOOL)scalesPageToFit;
-(void)setScalesPageToFit:(BOOL)arg1 ;
-(BOOL)isLoading;
-(id)stringByEvaluatingJavaScriptFromString:(id)arg1 ;
-(BOOL)canGoBack;
-(BOOL)canGoForward;
-(BOOL)allowsPictureInPictureMediaPlayback;
-(void)goBack;
-(void)goForward;
-(void)setUp;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
-(void)evaluateJavaScript:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4 ;
-(void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)setHasMovedToWindow:(BOOL)arg1 ;
-(BOOL)hasMovedToWindow;
@end

