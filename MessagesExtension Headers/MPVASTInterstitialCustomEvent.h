/*
* This header is generated by classdump-dyld 1.0
* on Tuesday, August 18, 2020 at 5:59:19 AM Central Daylight Time
* Operating System: Version 13.3 (Build 17C54)
* Image Source: /private/var/containers/Bundle/Application/97E911F0-28BD-48AC-8574-5B9D68F985F0/Game Pack.app/PlugIns/MessagesExtension.appex/MessagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MessagesExtension/MPInterstitialCustomEvent.h>
#import <MessagesExtension/MPRewardedVideoCustomEvent.h>
#import <MessagesExtension/MPAdDestinationDisplayAgentDelegate.h>
#import <MessagesExtension/MPVideoPlayerViewControllerDelegate.h>

@protocol MPPrivateInterstitialCustomEventDelegateMPPrivateRewardedVideoCustomEventDelegate, MPAdDestinationDisplayAgent, MPVASTTracking, MPMediaFileCache;
@class NSDictionary, MPVASTMediaFile, MPVideoConfig, MPVideoPlayerViewController, NSString;

@interface MPVASTInterstitialCustomEvent : MPInterstitialCustomEvent <MPRewardedVideoCustomEvent, MPAdDestinationDisplayAgentDelegate, MPVideoPlayerViewControllerDelegate> {

	BOOL _hasAdAvailable;
	id<MPPrivateInterstitialCustomEventDelegate><MPPrivateRewardedVideoCustomEventDelegate> delegate;
	id<MPAdDestinationDisplayAgent> _adDestinationDisplayAgent;
	id<MPVASTTracking> _vastTracking;
	id<MPMediaFileCache> _mediaFileCache;
	MPVASTMediaFile* _remoteMediaFileToPlay;
	MPVideoConfig* _videoConfig;
	MPVideoPlayerViewController* _playerViewController;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) NSDictionary * localExtras; 
@property (assign,nonatomic,__weak) id<MPRewardedVideoCustomEventDelegate> delegate; 
@property (nonatomic,retain) id<MPAdDestinationDisplayAgent> adDestinationDisplayAgent;                                                            //@synthesize adDestinationDisplayAgent=_adDestinationDisplayAgent - In the implementation block
@property (nonatomic,retain) id<MPVASTTracking> vastTracking;                                                                                      //@synthesize vastTracking=_vastTracking - In the implementation block
@property (nonatomic,retain) id<MPMediaFileCache> mediaFileCache;                                                                                  //@synthesize mediaFileCache=_mediaFileCache - In the implementation block
@property (nonatomic,retain) MPVASTMediaFile * remoteMediaFileToPlay;                                                                              //@synthesize remoteMediaFileToPlay=_remoteMediaFileToPlay - In the implementation block
@property (nonatomic,retain) MPVideoConfig * videoConfig;                                                                                          //@synthesize videoConfig=_videoConfig - In the implementation block
@property (nonatomic,retain) MPVideoPlayerViewController * playerViewController;                                                                   //@synthesize playerViewController=_playerViewController - In the implementation block
@property (assign,nonatomic) BOOL hasAdAvailable;                                                                                                  //@synthesize hasAdAvailable=_hasAdAvailable - In the implementation block
@property (assign,nonatomic,__weak) id<MPPrivateInterstitialCustomEventDelegate><MPPrivateRewardedVideoCustomEventDelegate> delegate; 
-(void)loadAd;
-(void)showInterstitialFromRootViewController:(id)arg1 ;
-(id<MPAdDestinationDisplayAgent>)adDestinationDisplayAgent;
-(id)adConfig;
-(void)fetchAndLoadAdWithConfiguration:(id)arg1 fetchAdCompletion:(/*^block*/id)arg2 ;
-(void)setVideoConfig:(MPVideoConfig *)arg1 ;
-(void)setRemoteMediaFileToPlay:(MPVASTMediaFile *)arg1 ;
-(void)setVastTracking:(id<MPVASTTracking>)arg1 ;
-(id<MPMediaFileCache>)mediaFileCache;
-(id<MPVASTTracking>)vastTracking;
-(void)requestInterstitialWithCustomEventInfo:(id)arg1 adMarkup:(id)arg2 ;
-(void)dismissPlayerViewController;
-(void)setAdDestinationDisplayAgent:(id<MPAdDestinationDisplayAgent>)arg1 ;
-(void)setMediaFileCache:(id<MPMediaFileCache>)arg1 ;
-(MPVASTMediaFile *)remoteMediaFileToPlay;
-(MPVideoConfig *)videoConfig;
-(BOOL)hasAdAvailable;
-(void)setHasAdAvailable:(BOOL)arg1 ;
-(BOOL)enableAutomaticImpressionAndClickTracking;
-(void)handleAdPlayedForCustomEventNetwork;
-(void)handleCustomEventInvalidated;
-(void)presentRewardedVideoFromViewController:(id)arg1 ;
-(void)requestRewardedVideoWithCustomEventInfo:(id)arg1 adMarkup:(id)arg2 ;
-(void)displayAgentDidDismissModal;
-(void)displayAgentWillLeaveApplication;
-(void)displayAgentWillPresentModal;
-(id)viewControllerForPresentingModalView;
-(void)interstitialWillAppear:(id)arg1 ;
-(void)interstitialDidAppear:(id)arg1 ;
-(void)interstitialWillDisappear:(id)arg1 ;
-(void)interstitialDidDisappear:(id)arg1 ;
-(id)viewControllerForPresentingModalMRAIDExpandedView;
-(void)videoPlayerContainerViewDidLoadVideo:(id)arg1 ;
-(void)videoPlayerContainerViewDidFailToLoadVideo:(id)arg1 error:(id)arg2 ;
-(void)videoPlayerContainerViewDidStartVideo:(id)arg1 duration:(double)arg2 ;
-(void)videoPlayerContainerViewDidCompleteVideo:(id)arg1 duration:(double)arg2 ;
-(void)videoPlayerContainerView:(id)arg1 videoDidReachProgressTime:(double)arg2 duration:(double)arg3 ;
-(void)videoPlayerContainerView:(id)arg1 didTriggerEvent:(long long)arg2 videoProgress:(double)arg3 ;
-(void)videoPlayerContainerView:(id)arg1 didShowIndustryIconView:(id)arg2 ;
-(void)videoPlayerContainerView:(id)arg1 didClickIndustryIconView:(id)arg2 overridingClickThroughURL:(id)arg3 ;
-(void)videoPlayerContainerView:(id)arg1 didShowCompanionAdView:(id)arg2 ;
-(void)videoPlayerContainerView:(id)arg1 didClickCompanionAdView:(id)arg2 overridingClickThroughURL:(id)arg3 ;
-(void)videoPlayerContainerView:(id)arg1 didFailToLoadCompanionAdView:(id)arg2 ;
-(void)videoPlayerContainerView:(id)arg1 companionAdViewRequestDismiss:(id)arg2 ;
-(id)init;
-(void)dealloc;
-(id<MPRewardedVideoCustomEventDelegate>)delegate;
-(void)setDelegate:(id<MPRewardedVideoCustomEventDelegate>)arg1 ;
-(MPVideoPlayerViewController *)playerViewController;
-(void)setPlayerViewController:(MPVideoPlayerViewController *)arg1 ;
@end

